{"mappings":"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","sources":["src/js/controller.js"],"sourcesContent":["(async () => {\n  // contiene il json o testo della risposta, l'elemento da salvare in clipboard\n  let o = '';\n  //contiene il tipo application/json o text/html e fa il controllo con la primo carattere se Ã¨ { da capire se puo rompere il flusso\n  let s = '';\n  let t = '[bmg-arco-button]';\n  let isSnippetCopy = false;\n\n  const memberstack = window.$memberstackDom;\n  const memberData = await memberstack.getCurrentMember();\n  const member = memberData.data;\n  let memberJson = {};\n\n  if (member) {\n    // Get current member's JSON\n    const memberJsonData = await memberstack.getMemberJSON();\n    memberJson = memberJsonData.data || { savedComp: [] };\n  }\n\n  window.fsAttributes = window.fsAttributes || [];\n  window.fsAttributes.push([\n    'cmsload',\n    listInstances => {\n      console.log('cmsload Successfully loaded!');\n\n      // The callback passes a `listInstances` array with all the `CMSList` instances on the page.\n      const [listInstance] = listInstances;\n\n      // The `renderitems` event runs whenever the list renders items after switching pages.\n      listInstance.on('renderitems', renderedItems => {\n        console.log('page changed');\n\n        setListener();\n      });\n\n      const pageName = location.href.split('/').slice(-1)[0];\n      // if there are file names saved in the metadata\n      if (memberJson.savedComp && pageName == 'saved') {\n        // for each liked item\n        // get it's name\n        $('[comp-card]').each((i, item) => {\n          const itemId = $(this).closest('[tb-item-id]').attr('tb-item-id')\n\n          // if the liked item's name also exists in the metadata's file names\n          if (\n            memberJson.savedComp.indexOf(itemId) !== -1 ||\n            memberJson.savedInspo.indexOf(itemId) !== -1\n          ) {\n            // show the card\n            $(item).closest('[comp-item]').removeClass('hide');\n          }\n        });\n\n        //Webflow.require('ix2').init()\n      }\n    },\n  ]);\n\n  //recupera lo snippet e modifica lo stato del bottone\n  function c(element, platform, id) {    \n    const urlAPI = `https://xju6-kpzy-l8vj.n7.xano.io/api:4lTavcfO/components/${id}/platform/${platform}`;\n\n    let logoPlatform = element.find('img').clone();\n    function i(platform) {\n      setTimeout(function () {\n        element.text(platform),\n          setTimeout(function () {\n            element.empty(),\n              element.append(logoPlatform),\n              element.css({ 'pointer-events': 'auto' });\n          }, 1500);\n      }, 1500);\n    }\n    let c = new XMLHttpRequest();\n    element.css({ 'pointer-events': 'none' }),\n      element.empty(),\n      element.text('Copying...'),\n      c.open('GET', urlAPI, !0),\n      (c.onload = function () {\n        let ris = JSON.parse(this.response);\n        // qui imposta o e s che stanno sopra\n        c.status >= 200 && c.status < 400\n          ? ((o = ris[platform]),\n            (s = '{' == ris[platform].charAt(0) ? 'application/json' : 'text/html'),\n            (isSnippetCopy = true),\n            document.execCommand('copy'),\n            i('Copied!'))\n          : i(`Error: ${c.status}`);\n      }),\n      c.send();\n  }\n\n  document.addEventListener('copy', t => {\n    if (isSnippetCopy) {\n      // recupra i dati salvati prima per il clipboard\n      t.clipboardData.setData(s, o), t.preventDefault();\n      isSnippetCopy = false;\n    }\n  });\n\n  const setListener = () => {\n\n    $('[comp-card-save-btn]').hide()\n\n\n\n    //1 evento al click del platform button recuepro i dati necessari\n    //per la chiamata, l'id viene messo da wized come attributo\n\n    $('.actions-button-wrapper,[action-button]').click(function (event) {\n      event.stopPropagation();\n      return true;\n    });\n\n    $(t).click(function (event) {\n      if (!member) {\n        $(event.target)\n          .closest('[comp-card]')\n          .find('[w-el=\"compLock\"]')\n          .css('display', 'flex');\n\n        return;\n      }\n\n      //event.stopPropagation();\n      //console.log($(this))\n      const platform = $(this).attr('bmg-arco-button');\n      const id = $(this).closest('[tb-item-id]').attr('tb-item-id');\ndebugger\n      c($(this), platform, id);\n    });\n\n    new ClipboardJS('[data-clipboard-text]').on('success', function (el) {\n      const tippyInstance = el.trigger._tippy;\n      tippyInstance.setContent('Copied');\n      tippyInstance.show();\n    });\n\n    tippy('[data-tippy-content]', {\n      trigger: 'manual',\n      duration: 100,\n      onShow(instance) {\n        setTimeout(() => {\n          instance.hide();\n        }, 1000);\n      },\n    });\n\n    // when the like button button is clicked\n    // save the file's name to metadata\n    $('[comp-card-save-btn]').click(async function (event) {\n      if (!member) {\n        $(event.target)\n          .closest('[comp-card]')\n          .find('[w-el=\"compLock\"]')\n          .css('display', 'flex');\n        return;\n      }\n      const tippyInstance = this._tippy;\n\n      // get the name of the liked item\n      // const name = $.trim(\n      //   $(this).closest('[comp-card]').find('[comp-card-title]').text()\n      // );\n      const itemId = $(this).closest('[tb-item-id]').attr('tb-item-id')\n      // if the name does not already exist in the metadata fileNames\n      const isInspo = $(this).closest('[comp-card]').attr('comp-card') == 'inspiration';\n\n      if (isInspo) {\n        memberJson.savedInspo = memberJson.savedInspo || [];\n        if (memberJson.savedInspo.indexOf(itemId) === -1) {\n          memberJson.savedInspo.push(itemId);\n\n          const num = memberJson.savedInspo.length || 0;\n\n          memberJson.savedInspoNum = num;\n          await memberstack.updateMemberJSON({ json: memberJson });\n\n          tippyInstance.setContent('Saved');\n          tippyInstance.show();\n          return;\n        }\n      } else {\n        memberJson.savedComp = memberJson.savedComp || [];\n        if (memberJson.savedComp.indexOf(itemId) === -1) {\n          // push the name to the metadata.fileNames array\n          memberJson.savedComp.push(itemId);\n          // get the number of fileNames in the metadata\n          // or set the number as 0 if there are no existing filenames\n          const num = memberJson.savedComp.length || 0;\n          // set the metadata itemsNum as the number of filenames in the metadata\n          memberJson.savedCompNum = num;\n          // update memberstack with the new metadata object\n          await memberstack.updateMemberJSON({ json: memberJson });\n\n          tippyInstance.setContent('Saved');\n          tippyInstance.show();\n          return;\n        }\n      }\n\n      tippyInstance.setContent('Already saved');\n      tippyInstance.show();\n    });\n\n    // when the delete button is clicked if in saved page\n    $(document).on('click', '.hack32-like-item .del', function () {\n      // get the name of the liked item\n      const name = $.trim(\n        $(this).closest('.hack32-like-item').find('.hack32-title').text()\n      );\n      // if the name exists in the metadata fileNames\n      if (metadata.fileNames.indexOf(name) !== -1) {\n        // remove the name from metadata fileNames\n        metadata.fileNames.splice(metadata.fileNames.indexOf(name), 1);\n        // update the number of items\n        metadata.itemsNum = metadata.fileNames.length;\n        // display the updated number of items\n        $('.hack32-like-count').text(metadata.itemsNum);\n        // update memberstack with the new metadata object\n        member.updateMetaData(metadata);\n      }\n\n      // remove item from the saved items div\n      $(this).closest('.hack32-like-item').remove();\n    });\n  };\n\n  setListener();\n})().catch(err => {\n  console.error(err);\n});\n"],"names":["o","s","isSnippetCopy","memberstack","window","$memberstackDom","member","getCurrentMember","data","memberJson","memberJsonData","getMemberJSON","savedComp","fsAttributes","push","listInstances","console","log","listInstance","on","renderedItems","setListener","pageName","location","href","split","slice","$","each","i","item","itemId","$f50bd1f2915ed0f2$exports","closest","attr","indexOf","savedInspo","removeClass","document","addEventListener","t","clipboardData","setData","preventDefault","hide","click","event","stopPropagation","target","find","css","platform","this","id","element","urlAPI","logoPlatform","clone","setTimeout","text","empty","append","c","XMLHttpRequest","open","onload","ris","JSON","parse","response","status","charAt","execCommand","send","ClipboardJS","el","tippyInstance","trigger","_tippy","setContent","show","tippy","duration","onShow","instance","async","num","length","savedInspoNum","updateMemberJSON","json","savedCompNum","name","trim","metadata","fileNames","splice","itemsNum","updateMetaData","remove","catch","err","error"],"version":3,"file":"index.88db99b2.js.map"}