{"mappings":"AAAC,WACC,MAAMA,EAAS,6DAEf,IAAIC,EAAI,GAEJC,EAAI,GAEJC,GAAgB,EAEpB,MAAMC,EAAcC,OAAOC,gBAErBC,SADmBH,EAAYI,oBACXC,KAC1B,IAAIC,EAAa,CAAC,EAElB,GAAIH,EAAQ,CAEV,MAAMI,QAAuBP,EAAYQ,gBACzCF,EAAaC,EAAeF,MAAQ,CAACI,UAAU,GACjD,CAGFR,OAAOS,aAAeT,OAAOS,cAAgB,GAC7CT,OAAOS,aAAaC,KAAK,CACrB,UACAC,IACEC,QAAQC,IAAI,gCAGZ,MAAOC,GAAgBH,EAGvBG,EAAaC,GAAG,eAAeC,IAC7BJ,QAAQC,IAAI,gBAEZI,GAAA,IAKJ,MAAMC,EAAWC,SAASC,KAAKC,MAAM,KAAKC,OAAM,GAAI,GAEjDjB,EAAWG,WAA0B,SAAZU,GAG1BK,EAAE,iCAAiCC,MAAK,CAACC,EAAEC,MAEmB,IAAzDrB,EAAWG,UAAUmB,QAAQJ,EAAEK,KAAKL,EAAEG,GAAMG,UAG7CN,EAAEG,GAAMI,QAAQ,eACfC,YAAY,UAGjB,IAuCJC,SAASC,iBAAiB,QAAQC,IAC5BpC,IAEFoC,EAAEC,cAAcC,QAAQvC,EAAGD,GAAIsC,EAAEG,iBACjCvC,GAAgB,EAClB,IAGF,MAAMmB,EAAc,KAGlBM,EAjGM,qBAiGDe,OAAO,SAAUC,GAEpB,IAAIrC,EAeF,YAdAsC,SAAS,CACPX,KAAM,cACNY,YAAY,iCACZC,SAAU,IACVC,QAAS,MACTC,SAAU,SACVC,aAAa,EACbC,MAAO,CACLC,WAAY,QACZ,gBAAgB,YAGjBC,YAOL,MAAMC,EAAW1B,EAAE2B,MAAMC,KAAK,mBACxBC,EAAK7B,EAAE2B,MAAMC,KAAK,YAjE5B,SAAWjB,EAAGmB,EAAGC,GACf,IAAIC,EAAerB,EAAEsB,KAAK,OAAOC,QACjC,SAAShC,EAAE4B,GACTK,YAAW,WACTxB,EAAEL,KAAKwB,GACLK,YAAW,WACTxB,EAAEyB,QACAzB,EAAE0B,OAAOL,GACTrB,EAAE2B,IAAI,CAAE,iBAAkB,QAC9B,GAAG,KACP,GAAG,KACL,CACA,IAAIC,EAAI,IAAIC,eACZ7B,EAAE2B,IAAI,CAAE,iBAAkB,SACxB3B,EAAEyB,QACFzB,EAAEL,KAAK,cACPiC,EAAEE,KAAK,MAAOrE,EAAS2D,GAAG,GACzBQ,EAAEG,OAAS,WACV,IAAI/B,EAAIgC,KAAKC,MAAMjB,KAAKkB,UAExBN,EAAEO,QAAU,KAAOP,EAAEO,OAAS,KACzBzE,EAAKsC,EAAEmB,GACPxD,EAAI,KAAOqC,EAAEmB,GAAGiB,OAAO,GAAK,mBAAqB,YACjDxE,GAAgB,EACjBkC,SAASuC,YAAY,QACrB9C,EAAE,YACFA,EAAE,UAAUqC,EAAEO,SACpB,EACAP,EAAEU,MACN,CAsCIV,CAAEvC,EAAE2B,MAAOD,EAAUG,EACvB,IAEA,IAAIqB,YAAY,yBAEhBC,MAAM,uBAAwB,CAC5BC,QAAS,QACTjC,SAAU,IACVkC,OAAOC,GACLnB,YAAW,KACTmB,EAASC,MAAI,GACZ,IACL,IAKFvD,EAAE,wBAAwBe,OAAMyC,iBAE9B,MAAMC,EAAOzD,EAAEK,KAAKL,EAAE2B,MAAMpB,QAAQ,eAAe0B,KAAK,qBAAqB3B,QAG7E,GADAxB,EAAWG,UAAYH,EAAWG,WAAa,IACL,IAAvCH,EAAWG,UAAUmB,QAAQqD,GAAa,CAE3C3E,EAAWG,UAAUE,KAAKsE,GAG1B,MAAMC,EAAM5E,EAAWG,UAAU0E,QAAU,EAE3C7E,EAAW8E,aAAeF,QAEtBlF,EAAYqF,iBAAiB,CAACC,KAAMhF,GAC1C,CACF,IAIAkB,EAAES,UAAUjB,GAAG,QAAS,0BAA0B,WAEhD,MAAMiE,EAAOzD,EAAEK,KAAKL,EAAE2B,MAAMpB,QAAQ,qBAAqB0B,KAAK,iBAAiB3B,SAEvC,IAArCyD,SAASC,UAAU5D,QAAQqD,KAE5BM,SAASC,UAAUC,OAAOF,SAASC,UAAU5D,QAAQqD,GAAO,GAE5DM,SAASG,SAAWH,SAASC,UAAUL,OAEvC3D,EAAE,sBAAsBM,KAAKyD,SAASG,UAEtCvF,EAAOwF,eAAeJ,WAIxB/D,EAAE2B,MAAMpB,QAAQ,qBAAqB6D,QACvC,KAIF1E,GAEF,EA5LC,GA4LI2E,OAAMC,IACTjF,QAAQkF,MAAMD,EAAA","sources":["src/js/controller.js"],"sourcesContent":["(async () => {\n  const urlAPI = 'https://xju6-kpzy-l8vj.n7.xano.io/api:4lTavcfO/components/';\n  // contiene il json o testo della risposta, l'elemento da salvare in clipboard\n  let o = '';\n  //contiene il tipo application/json o text/html e fail controllo con la primo carattere se Ã¨ { da capire se puo rompere il flusso\n  let s = '';\n  let t = '[bmg-arco-button]';\n  let isSnippetCopy = false;\n \n  const memberstack = window.$memberstackDom\n  const memberData = await memberstack.getCurrentMember()\n  const member = memberData.data;\n  let memberJson = {};\n\n  if (member) {\n    // Get current member's JSON\n    const memberJsonData = await memberstack.getMemberJSON();\n    memberJson = memberJsonData.data || {savedComp:[]};\n  }\n  \n\nwindow.fsAttributes = window.fsAttributes || [];\nwindow.fsAttributes.push([\n    'cmsload',\n    listInstances => {\n      console.log('cmsload Successfully loaded!');\n\n      // The callback passes a `listInstances` array with all the `CMSList` instances on the page.\n      const [listInstance] = listInstances;\n\n      // The `renderitems` event runs whenever the list renders items after switching pages.\n      listInstance.on('renderitems', renderedItems => {\n        console.log('page changed');\n\n        setListener();\n\n\n      });\n         \n    const pageName = location.href.split(\"/\").slice(-1)[0]\n    // if there are file names saved in the metadata\n    if(memberJson.savedComp &&  pageName == 'saved'){\n      // for each liked item\n      // get it's name\n      $('[comp-card] [comp-card-title]').each((i,item)=>{\n        // if the liked item's name also exists in the metadata's file names\n        if(memberJson.savedComp.indexOf($.trim($(item).text())) !== -1){\n          // clone & append the liked item to the .user-files div\n          // (the reason for .clone() is to avoid removing it from its original .hack32-like-row)\n          $(item).closest('[comp-item]')\n          .removeClass('hide');\n          \n        }\t\t\n      });\n\n      //Webflow.require('ix2').init()\n    }  \n    },\n  ]);\n\n  //recupera lo snippet e modifica lo stato del bottone\n  function c(t, e, n) {\n    let logoPlatform = t.find('img').clone();\n    function i(e) {\n      setTimeout(function () {\n        t.text(e),\n          setTimeout(function () {\n            t.empty(),\n              t.append(logoPlatform),\n              t.css({ 'pointer-events': 'auto' });\n          }, 1500);\n      }, 1500);\n    }\n    let c = new XMLHttpRequest();\n    t.css({ 'pointer-events': 'none' }),\n      t.empty(),\n      t.text('Copying...'),\n      c.open('GET', urlAPI + n, !0),\n      (c.onload = function () {\n        let t = JSON.parse(this.response);\n        // qui imposta o e s che stanno sopra\n        c.status >= 200 && c.status < 400\n          ? ((o = t[e]),\n            (s = '{' == t[e].charAt(0) ? 'application/json' : 'text/html'),\n            (isSnippetCopy = true),\n            document.execCommand('copy'),\n            i('Copied!'))\n          : i(`Error: ${c.status}`);\n      }),\n      c.send();\n  }\n\n  document.addEventListener('copy', t => {\n    if (isSnippetCopy) {\n      // recupra i dati salvati prima per il clipboard\n      t.clipboardData.setData(s, o), t.preventDefault();\n      isSnippetCopy = false;\n    }\n  });\n\n  const setListener = () => {\n    //1 evento al click del platform button recuepro i dati necessari\n    //per la chiamata, l'id viene messo da wized come attributo\n    $(t).click( function (event) {\n\n      if(!member){\n        Toastify({\n          text: \"Login first\",\n          destination:'https://www.tilebit.io/sign-in',\n          duration: 3000,\n          gravity: \"top\", // `top` or `bottom`\n          position: \"center\", // `left`, `center` or `right`\n          stopOnFocus: true, // Prevents dismissing of toast on hover\n          style: {\n            background: 'black',\n            'border-radius':'0.5rem'\n          },\n         \n        }).showToast();\n\n        return\n      }\n\n      //event.stopPropagation();\n      //console.log($(this))\n      const platform = $(this).attr('bmg-arco-button');\n      const id = $(this).attr('comp-id');\n\n      c($(this), platform, id);\n    });\n\n    new ClipboardJS('[data-clipboard-text]');\n\n    tippy('[data-tippy-content]', {\n      trigger: 'click',\n      duration: 300,\n      onShow(instance) {\n        setTimeout(() => {\n          instance.hide();\n        }, 3000);\n      },\n    });\n\n      // when the like button button is clicked\n    // save the file's name to metadata\n    $('[comp-card-save-btn]').click(async function(){\t  \n      // get the name of the liked item\n      const name = $.trim($(this).closest('[comp-card]').find('[comp-card-title]').text());\n      // if the name does not already exist in the metadata fileNames\n      memberJson.savedComp = memberJson.savedComp || [];\n      if(memberJson.savedComp.indexOf(name) === -1){   \n        // push the name to the metadata.fileNames array\n        memberJson.savedComp.push(name);\n        // get the number of fileNames in the metadata\n        // or set the number as 0 if there are no existing filenames\n        const num = memberJson.savedComp.length || 0;\n        // set the metadata itemsNum as the number of filenames in the metadata\n        memberJson.savedCompNum = num;\n        // update memberstack with the new metadata object\n      await memberstack.updateMemberJSON({json: memberJson});\n      }\t\t\n    });\n\n\n        // when the delete button is clicked if in saved page\n    $(document).on('click', '.hack32-like-item .del', function(){\n      // get the name of the liked item\n      const name = $.trim($(this).closest('.hack32-like-item').find('.hack32-title').text());\n      // if the name exists in the metadata fileNames\n      if(metadata.fileNames.indexOf(name) !== -1){  \n        // remove the name from metadata fileNames\n        metadata.fileNames.splice(metadata.fileNames.indexOf(name), 1);\n        // update the number of items\n        metadata.itemsNum = metadata.fileNames.length;\n        // display the updated number of items\n        $('.hack32-like-count').text(metadata.itemsNum);\n        // update memberstack with the new metadata object\n        member.updateMetaData(metadata);\n      }\n      \n      // remove item from the saved items div\n      $(this).closest('.hack32-like-item').remove();\n    });\n  };\n\n\n  setListener();\n\n})().catch(err => {\n  console.error(err);\n});\n  "],"names":["urlAPI","o","s","isSnippetCopy","memberstack","window","$memberstackDom","member","getCurrentMember","data","memberJson","memberJsonData","getMemberJSON","savedComp","fsAttributes","push","listInstances","console","log","listInstance","on","renderedItems","setListener","pageName","location","href","split","slice","$","each","i","item","indexOf","trim","text","closest","removeClass","document","addEventListener","t","clipboardData","setData","preventDefault","click","event","Toastify","destination","duration","gravity","position","stopOnFocus","style","background","showToast","platform","this","attr","id","e","n","logoPlatform","find","clone","setTimeout","empty","append","css","c","XMLHttpRequest","open","onload","JSON","parse","response","status","charAt","execCommand","send","ClipboardJS","tippy","trigger","onShow","instance","hide","async","name","num","length","savedCompNum","updateMemberJSON","json","metadata","fileNames","splice","itemsNum","updateMetaData","remove","catch","err","error"],"version":3,"file":"index.e1adfaa8.js.map"}