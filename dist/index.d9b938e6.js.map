{"mappings":"AAAAA,OAAOC,OAASC,UACd,MAAMC,EAAS,6DAEb,IAAIC,EAAI,GAEJC,EAAI,GAERC,GAAgB,EAmClBC,SAASC,iBAAiB,QAASC,IAEhCH,IAEDG,EAAEC,cAAcC,QAAQN,EAAGD,GAC3BK,EAAEG,iBACFN,GAAgB,EAChB,IAIF,MAAMO,EAAc,KAIpBC,EAnDM,qBAmDDC,OAAM,SAAUC,GAGhB,MAAMC,EAAWH,EAAEI,MAAMC,KAAK,mBACxBC,EAAKN,EAAEI,MAAMC,KAAK,YAlD7B,SAAWV,EAAGY,EAAGC,GACf,IAAIC,EAAed,EAAEe,KAAK,OAAOC,QACjC,SAASC,EAAEL,GACTM,YAAW,WACTlB,EAAEmB,KAAKP,GACLM,YAAW,WACTlB,EAAEoB,QAASpB,EAAEqB,OAAOP,GAAed,EAAEsB,IAAI,CAAE,iBAAkB,QAC/D,GAAG,KACP,GAAG,KACL,CACE,IAAIC,EAAI,IAAIC,eACZxB,EAAEsB,IAAI,CAAE,iBAAkB,SACxBtB,EAAEoB,QACFpB,EAAEmB,KAAK,cACPI,EAAEE,KAAK,MAAO/B,EAASmB,GAAG,GACzBU,EAAE/B,OAAS,WACV,IAAIQ,EAAI0B,KAAKC,MAAMlB,KAAKmB,UAExBL,EAAEM,QAAU,KAAON,EAAEM,OAAS,KACzBlC,EAAKK,EAAEY,GACPhB,EAAI,KAAOI,EAAEY,GAAGkB,OAAO,GAAK,mBAAqB,YAClDjC,GAAgB,EAChBC,SAASiC,YAAY,QACrBd,EAAE,YACFA,EAAE,UAAUM,EAAEM,SACpB,EACAN,EAAES,MAER,CAwBGT,CAAElB,EAAEI,MAAOD,EAAUG,EAEtB,IAEA,IAAIsB,YAAY,yBAGhBC,MAAM,uBAAwB,CAChCC,QAAS,QACTC,SAAU,IACRC,OAAOC,GACPpB,YAAW,KACToB,EAASC,MAAI,GACZ,IACL,GACF,EAEEnC,IAGAb,OAAOiD,aAAejD,OAAOiD,cAAgB,GAC/CjD,OAAOiD,aAAaC,KAAK,CACvB,UACCC,IACCC,QAAQC,IAAI,gCAGZ,MAAOC,GAAgBH,EAGvBG,EAAaC,GAAG,eAAgBC,IAC5BJ,QAAQC,IAAI,gBAEfxC,GAAA,GACD,GAEH","sources":["src/js/controller.js"],"sourcesContent":["window.onload = async () => {\n  const urlAPI = \"https://xju6-kpzy-l8vj.n7.xano.io/api:4lTavcfO/components/\";\n    // contiene il json o testo della risposta, l'elemento da salvare in clipboard\n    let o = \"\";\n    //contiene il tipo application/json o text/html e fail controllo con la primo carattere se Ã¨ { da capire se puo rompere il flusso\n    let s = \"\";\nlet t = \"[bmg-arco-button]\";\nlet isSnippetCopy = false\n\n\n//recupera lo snippet e modifica lo stato del bottone\n  function c(t, e, n) {\n    let logoPlatform = t.find(\"img\").clone();\n    function i(e) {\n      setTimeout(function () {\n        t.text(e),\n          setTimeout(function () {\n            t.empty(), t.append(logoPlatform), t.css({ \"pointer-events\": \"auto\" });\n          }, 1500);\n      }, 1500);\n    }\n      let c = new XMLHttpRequest();\n      t.css({ \"pointer-events\": \"none\" }),\n        t.empty(),\n        t.text(\"Copying...\"),\n        c.open(\"GET\", urlAPI + n, !0),\n        (c.onload = function () {\n          let t = JSON.parse(this.response);\n          // qui imposta o e s che stanno sopra\n          c.status >= 200 && c.status < 400\n            ? ((o = t[e]),\n              (s = \"{\" == t[e].charAt(0) ? \"application/json\" : \"text/html\"),\n              isSnippetCopy = true,\n              document.execCommand(\"copy\"),\n              i(\"Copied!\"))\n            : i(`Error: ${c.status}`);\n        }),\n        c.send();\n   \n  }\n \n\n  document.addEventListener(\"copy\", (t) => {\n  \n  if(isSnippetCopy){\n    // recupra i dati salvati prima per il clipboard\n    t.clipboardData.setData(s, o), \n    t.preventDefault();\n    isSnippetCopy = false\n    }\n    \n  });\n  \n  const setListener = ()=>{\n  \n  //1 evento al click del platform button recuepro i dati necessari\n  //per la chiamata, l'id viene messo da wized come attributo\n  $(t).click(function (event) {\n  //event.stopPropagation();\n       //console.log($(this))\n       const platform = $(this).attr('bmg-arco-button')\n       const id = $(this).attr('comp-id')\n\n     c($(this), platform, id) \n     \n    })\n    \n    new ClipboardJS('[data-clipboard-text]');\n\n    \n    tippy('[data-tippy-content]', {\n  trigger: 'click',\n  duration: 300,\n    onShow(instance) {\n    setTimeout(() => {\n      instance.hide();\n    }, 3000);\n  }\n});\n}\n  setListener()\n  \n  \n  window.fsAttributes = window.fsAttributes || [];\nwindow.fsAttributes.push([\n  'cmsload',\n  (listInstances) => {\n    console.log('cmsload Successfully loaded!');\n\n    // The callback passes a `listInstances` array with all the `CMSList` instances on the page.\n    const [listInstance] = listInstances;\n\n    // The `renderitems` event runs whenever the list renders items after switching pages.\n    listInstance.on('renderitems', (renderedItems) => {\n        console.log('page changed');\n\n     setListener()\n    });\n  },\n]);\n \n  \n}\n\n \n\n\n\n"],"names":["window","onload","async","urlAPI","o","s","isSnippetCopy","document","addEventListener","t","clipboardData","setData","preventDefault","setListener","$","click","event","platform","this","attr","id","e","n","logoPlatform","find","clone","i","setTimeout","text","empty","append","css","c","XMLHttpRequest","open","JSON","parse","response","status","charAt","execCommand","send","ClipboardJS","tippy","trigger","duration","onShow","instance","hide","fsAttributes","push","listInstances","console","log","listInstance","on","renderedItems"],"version":3,"file":"index.d9b938e6.js.map"}